@page "/studentadmission"

<PageTitle>Student admission</PageTitle>
<div class="container-fluid">
    <h2>Manage student admission information</h2>

    @*     <div class="row mt-2">
    <div class="col form-floating">
    <button class="btn btn-primary" @onfocus="CountNumberOfRows" @onclick="UpdatePage">Change text</button>
    </div>
    </div> *@

    <div class="row mt-2">
        @*  #Output textbox for "Input"*@
        <div class="col form-floating">
            <textarea class="form-control" id="txtinput" name="txtinput" wrap="hard" placeholder="Result student admission items..." style="height: 200px"
                      @bind:event="oninput" @bind:get="Input" @bind:set="Input_OnInput"></textarea>
            <label class="form-lablel ps-4" for="txtinput"><p>Input text here... @InputLines lines</p></label>
        </div>
    </div>

    <div class="row mt-2">
        @*  #Output textbox for "Result"*@
        <div class="col form-floating">
            <textarea class="form-control" id="txtresult" name="txtresult" wrap="hard" placeholder="Result student admission items..." style="height: 200px"
                      @bind:event="oninput" @bind:get="Result" @bind:set="Result_OnInput"></textarea>
            <label class="form-lablel ps-4" for="txtresult">Result student admission items... @ResultLines lines</label>
        </div>
    </div>

    <div class="row mt-2">
        @*  #Output textbox for "Students"*@
        <div class="col form-floating">
            <textarea class="form-control" id="txtstudents" name="txtstudents" placeholder="Students..." style="height: 200px"
                      @bind:event="oninput" @bind:get="Students" @bind:set="Students_OnInput"></textarea>
            <label class="form-lablel ps-4" for="txtstudents">Students... @StudentLines</label>
        </div>
    </div>

    <div class="row mt-2">
        @*  #Output textbox for "Grades"*@
        <div class="col form-floating">
            <textarea class="form-control" id="txtgrades" name="txtgrades" placeholder="Grades..." style="height: 200px"
                      @bind:event="oninput" @bind:get="Grades" @bind:set="Grades_OnInput"></textarea>
            <label class="form-lablel ps-4" for="txtgrades">Grades... @GradeLines</label>
        </div>

        @*  #Output textbox for "CourseChoices"*@
        <div class="col form-floating">
            <textarea class="form-control" id="txtcoursechoices" name="txtcoursechoices" placeholder="Course choices..." style="height: 200px"
                      @bind:event="oninput" @bind:get="CourseChoices" @bind:set="CourseChoices_OnInput"></textarea>
            <label class="form-lablel ps-4" for="txtcoursechoices">Course choices... @CourseChoiceLines</label>
        </div>
    </div>
</div>

@code {

    private string Input { get; set; } = string.Empty;
    private string Result { get; set; } = string.Empty;
    private string Students { get; set; } = string.Empty;
    private string Grades { get; set; } = string.Empty;
    private string CourseChoices { get; set; } = string.Empty;
    private int InputLines { get; set; }
    private int ResultLines { get; set; }
    private int StudentLines { get; set; }
    private int GradeLines { get; set; }
    private int CourseChoiceLines { get; set; }

    private void OutputBookIt_OnInput(string value)
    {
        UpdatePage();
    }

    private void Input_OnInput(string value)
    {
        Input = value;
        UpdatePage();
    }

    private void Result_OnInput(string value)
    {
        Result = value;
        UpdatePage();
    }

    private void Students_OnInput(string value)
    {
        UpdatePage();
    }

    private void Grades_OnInput(string value)
    {
        UpdatePage();
    }

    private void CourseChoices_OnInput(string value)
    {
        UpdatePage();
    }

    private void UpdatePage()
    {
        if (Input.Length > 0)
        {
            ManageStudentAdmissionItems manage = new(Input);
            //OutputValue = manage.GetStudentAdmissionItemsList().ToString();
            Result = manage.StudentAdmissionItemsToString;
            Students = manage.StudentsToString;
            Grades = manage.GradesToString;
            CourseChoices = manage.CourseChoicesToString;
        }
        else
        {
            Result = string.Empty;
            Students = string.Empty;
            Grades = string.Empty;
            CourseChoices = string.Empty;
        }

        CountNumberOfRows();
    }

    private void CountNumberOfRows()
    {
        List<string> rows = new();
        rows = Input.Split("\n", StringSplitOptions.RemoveEmptyEntries).ToList();
        InputLines = rows.Count();
        rows = Result.Split("\n", StringSplitOptions.RemoveEmptyEntries).ToList();
        ResultLines = rows.Count() > 0 ? rows.Count() - 1 : rows.Count();
        rows = Students.Split("\n", StringSplitOptions.RemoveEmptyEntries).ToList();
        StudentLines = rows.Count() > 0 ? rows.Count() - 1 : rows.Count();
        rows = Grades.Split("\n", StringSplitOptions.RemoveEmptyEntries).ToList();
        GradeLines = rows.Count() > 0 ? rows.Count() - 1 : rows.Count();
        rows = CourseChoices.Split("\n", StringSplitOptions.RemoveEmptyEntries).ToList();
        CourseChoiceLines = rows.Count() > 0 ? rows.Count() - 1 : rows.Count();
    }
}
